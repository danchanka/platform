(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[37853],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return f},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},f=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,f=p(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,d=u["".concat(l,".").concat(m)]||u[m]||c[m]||o;return r?n.createElement(d,i(i({ref:t},f),{},{components:r})):n.createElement(d,i({ref:t},f))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},98648:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return p},toc:function(){return l},default:function(){return f}});var n=r(22122),a=r(19756),o=(r(67294),r(3905)),i={title:"READ operator"},p={unversionedId:"READ_operator",id:"version-v4/READ_operator",isDocsHomePage:!1,title:"READ operator",description:"The READ operator creates an action that reads a file to a property from an external resource.",source:"@site/versioned_docs/version-v4/READ_operator.md",sourceDirName:".",slug:"/READ_operator",permalink:"/platform/READ_operator",editUrl:"https://github.com/danchanka/platform/edit/v4/docs/en/READ_operator.md",version:"v4",lastUpdatedAt:1619608937,formattedLastUpdatedAt:"4/28/2021",frontMatter:{title:"READ operator"},sidebar:"version-v4/learn",previous:{title:"PRINT operator",permalink:"/platform/PRINT_operator"},next:{title:"REQUEST operator",permalink:"/platform/REQUEST_operator"}},l=[{value:"Syntax",id:"syntax",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]}],s={toc:l};function f(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"READ")," operator creates an ",(0,o.kt)("a",{parentName:"p",href:"/platform/Actions"},"action")," that ",(0,o.kt)("a",{parentName:"p",href:"/platform/Read_file_READ_"},"reads a file")," to a ",(0,o.kt)("a",{parentName:"p",href:"/platform/Properties"},"property")," from an external resource."),(0,o.kt)("h3",{id:"syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"READ [CLIENT [DIALOG]] urlExpr [TO propertyId]\n")),(0,o.kt)("h3",{id:"description"},"Description"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"READ")," operator creates an action that reads a file from an external resource at the URL specified, and then writes the result file to the specified property."),(0,o.kt)("p",null,"The following URL types are supported: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[file://]path_to_file\n[s]ftp://username:password[;charset]@host:port[/path_to_file][?passivemode=true|false]\n")),(0,o.kt)("p",null,"If the value of the property to which the file is written belongs to the ",(0,o.kt)("inlineCode",{parentName:"p"},"FILE")," class, the file extension from the URL is also written to its value along with the file."),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"CLIENT")),(0,o.kt)("p",{parentName:"li"},"  Keyword. If specified, the action will be executed on the client side. By default, the action is executed on the server.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"DIALOG")),(0,o.kt)("p",{parentName:"li"},"  Keyword. If specified, before writing the file a dialog will be shown in which the user can change the specified URL. This can be used only when writing to the disk (the URL type is file). By default, the dialog is not shown. ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"urlExpr")),(0,o.kt)("p",{parentName:"li"},"  An ",(0,o.kt)("a",{parentName:"p",href:"/platform/Expression"},"expression")," whose value is the URL from which to read. The value of the expression must be a string type.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"propertyId")),(0,o.kt)("p",{parentName:"li"},"  The ",(0,o.kt)("a",{parentName:"p",href:"/platform/IDs#propertyid-broken"},"ID of the property")," to which read data should be written. This property must not have parameters and its value must be of a file class (",(0,o.kt)("inlineCode",{parentName:"p"},"FILE"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RAWFILE"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"JSONFILE"),", etc.). If this property is not specified, the ",(0,o.kt)("inlineCode",{parentName:"p"},"System.exportFile")," property is used by default."))),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lsf"},"readFiles()  {\n\n    LOCAL importFile = FILE ();\n\n    //reading from FTP\n    READ 'ftp://ftp.lsfusion.org/file.xlsx' TO importFile;\n    //reading from SFTP\n    READ 'sftp://sftp.lsfusion.org/file.xlsx' TO importFile;\n    //reading from FILE\n    READ 'D://lsfusion/file.xlsx' TO importFile;\n    READ 'file://D://lsfusion/file.xlsx' TO importFile;\n}\n\nconnectionString = DATA STRING[100]();\nimportXls 'Import markups'()  {\n    LOCAL importFile = FILE ();\n    READ connectionString() + '@SELECT field1, field2 FROM myTable' TO importFile;\n\n    LOCAL field1 = INTEGER (INTEGER);\n    LOCAL field2 = BPSTRING[10] (INTEGER);\n    IMPORT TABLE FROM importFile() TO field1, field2;\n}\n")))}f.isMDXComponent=!0}}]);