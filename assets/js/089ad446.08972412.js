(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[97546],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return f},kt:function(){return u}});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),m=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},f=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},N=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,f=i(e,["components","mdxType","originalType","parentName"]),N=m(r),u=o,k=N["".concat(l,".").concat(u)]||N[u]||s[u]||n;return r?a.createElement(k,p(p({ref:t},f),{},{components:r})):a.createElement(k,p({ref:t},f))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,p=new Array(n);p[0]=N;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,p[1]=i;for(var m=2;m<n;m++)p[m]=r[m];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}N.displayName="MDXCreateElement"},98963:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return p},metadata:function(){return i},toc:function(){return l},default:function(){return f}});var a=r(22122),o=r(19756),n=(r(67294),r(3905)),p={title:"Property operators",sidebar_label:"Overview"},i={unversionedId:"Property_operators",id:"version-v4/Property_operators",isDocsHomePage:!1,title:"Property operators",description:"Property operator is a syntax construct that describes an operator creating a property.",source:"@site/versioned_docs/version-v4/Property_operators.md",sourceDirName:".",slug:"/Property_operators",permalink:"/platform/Property_operators",editUrl:"https://github.com/danchanka/platform/edit/v4/docs/en/Property_operators.md",version:"v4",lastUpdatedAt:1619189037,formattedLastUpdatedAt:"4/23/2021",sidebar_label:"Overview",frontMatter:{title:"Property operators",sidebar_label:"Overview"},sidebar:"version-v4/learn",previous:{title:"Operator priority",permalink:"/platform/Operator_priority"},next:{title:"Arithmetic operators",permalink:"/platform/Arithmetic_operators"}},l=[{value:"Context dependent operators",id:"context-dependent-operators",children:[]},{value:"Context independent operators",id:"contextindependent",children:[]}],m={toc:l};function f(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Property operator")," is a syntax construct that describes an ",(0,n.kt)("a",{parentName:"p",href:"/platform/Operators"},"operator")," creating a ",(0,n.kt)("a",{parentName:"p",href:"/platform/Properties"},"property"),". "),(0,n.kt)("p",null,"Property operators can be divided into ",(0,n.kt)("em",{parentName:"p"},"context dependent")," and ",(0,n.kt)("em",{parentName:"p"},"context independent"),"."),(0,n.kt)("h3",{id:"context-dependent-operators"},"Context dependent operators"),(0,n.kt)("p",null,"Context dependent property operators can be part of ",(0,n.kt)("a",{parentName:"p",href:"/platform/Expression"},"expressions")," and use common parameters (context). These operators are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/Arithmetic_operators"},"Arithmetic operators")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/Operator_"},(0,n.kt)("inlineCode",{parentName:"a"},"[]")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/ACTIVE_TAB_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"ACTIVE TAB")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/AGGR_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"AGGR")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/CASE_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"CASE")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/CLASS_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"CLASS")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/CONCAT_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"CONCAT")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/EXCLUSIVE_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"EXCLUSIVE")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/IF_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"IF")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/IF_..._THEN_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"IF ... THEN")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/JOIN_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"JOIN")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/MAX_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"MAX")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/MIN_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"MIN")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/MULTI_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"MULTI")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/OVERRIDE_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"OVERRIDE")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/PARTITION_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"PARTITION")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/GROUP_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"GROUP")," operator")," (without ",(0,n.kt)("inlineCode",{parentName:"li"},"BY")," block)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/PREV_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"PREV")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/RECURSION_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"RECURSION")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/STRUCT_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"STRUCT")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/UNGROUP_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"UNGROUP")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/Type_conversion_operator"},"Type conversion operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/AND_OR_NOT_XOR_operators"},(0,n.kt)("inlineCode",{parentName:"a"},"AND"),", ",(0,n.kt)("inlineCode",{parentName:"a"},"OR"),", ",(0,n.kt)("inlineCode",{parentName:"a"},"NOT"),", ",(0,n.kt)("inlineCode",{parentName:"a"},"XOR")," operators")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/IS_AS_operators"},(0,n.kt)("inlineCode",{parentName:"a"},"IS"),", ",(0,n.kt)("inlineCode",{parentName:"a"},"AS")," operators")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/Change_operators"},"Change operators")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/Comparison_operators"},"Comparison operators"))),(0,n.kt)("h3",{id:"contextindependent"},"Context independent operators"),(0,n.kt)("p",null,"Context independent property operators differ from the context dependent ones in that they do not just use the upper parameters but define the parameters themselves. As a result, they cannot be part of expressions and can only be used in the ",(0,n.kt)("a",{parentName:"p",href:"/platform/Instruction_="},(0,n.kt)("inlineCode",{parentName:"a"},"=")," instruction")," and the ",(0,n.kt)("a",{parentName:"p",href:"/platform/JOIN_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"JOIN")," operator"),": "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/DATA_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"DATA")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/GROUP_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"GROUP")," operator")," (with ",(0,n.kt)("inlineCode",{parentName:"li"},"BY")," block)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/FORMULA_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"FORMULA")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/ABSTRACT_operator"},(0,n.kt)("inlineCode",{parentName:"a"},"ABSTRACT")," operator")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/platform/Object_group_operator"},"Object group operators"))))}f.isMDXComponent=!0}}]);