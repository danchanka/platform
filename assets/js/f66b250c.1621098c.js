(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[97750],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),f=i(n),d=o,m=f["".concat(l,".").concat(d)]||f[d]||p[d]||a;return n?r.createElement(m,c(c({ref:t},s),{},{components:n})):r.createElement(m,c({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=f;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,c[1]=u;for(var i=2;i<a;i++)c[i]=n[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6859:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return s}});var r=n(22122),o=n(19756),a=(n(67294),n(3905)),c={title:"Sequence ({...})"},u={unversionedId:"Sequence_..._",id:"Sequence_..._",isDocsHomePage:!1,title:"Sequence ({...})",description:"To create an action that performs a sequence of other actions, the {...} operator is used -\xa0a block enclosed by curly brackets. The body of this block must contain a sequence of action operators\xa0and local property declarations.",source:"@site/docs/Sequence_..._.md",sourceDirName:".",slug:"/Sequence_..._",permalink:"/platform/next/Sequence_..._",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/Sequence_..._.md",version:"current",lastUpdatedAt:1617631212,formattedLastUpdatedAt:"4/5/2021",frontMatter:{title:"Sequence ({...})"},sidebar:"learn",previous:{title:"Execution order",permalink:"/platform/next/Execution_order"},next:{title:"Call (EXEC)",permalink:"/platform/next/Call_EXEC_"}},l=[{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],i={toc:l};function s(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To create an ",(0,a.kt)("a",{parentName:"p",href:"/platform/next/Actions"},"action")," that performs a sequence of other actions, the ",(0,a.kt)("a",{parentName:"p",href:"/platform/next/Operator_..._"},(0,a.kt)("strong",{parentName:"a"},"{...}")," operator")," is used -\xa0a block enclosed by curly brackets. The body of this block must contain a sequence of ",(0,a.kt)("a",{parentName:"p",href:"/platform/next/%D0%9Eperators"},"action operators"),"\xa0and local property declarations."),(0,a.kt)("h3",{id:"language"},"Language"),(0,a.kt)("p",null,"To declare an action that executes a sequence of other actions, use the ",(0,a.kt)("a",{parentName:"p",href:"/platform/next/Operator_..._"},(0,a.kt)("strong",{parentName:"a"},"{...}")," operator"),".\xa0"),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lsf"},"CLASS Currency;\nname = DATA STRING[30] (Currency);\ncode = DATA INTEGER (Currency);\n\nCLASS Order;\ncurrency = DATA Currency (Order);\ncustomer = DATA STRING[100] (Order);\ncopy 'Copy' (Order old)  {\n    NEW new = Order {                                   // an action is created that consists of the sequential execution of two actions\n        currency(new) <- currency(old);                 // a semicolon is put after each statement\n        customer(new) <- customer(old);\n    }                                                   // there is no semicolon in this line, because the operator ends in }\n}\n\nloadDefaultCurrency(ISTRING[30] name, INTEGER code)  {\n    NEW c = Currency {\n        name(c) <- name;\n        code(c) <- code;\n    }\n}\nrun ()  {\n    loadDefaultCurrency('USD', 866);\n    loadDefaultCurrency('EUR', 1251);\n}\n")))}s.isMDXComponent=!0}}]);