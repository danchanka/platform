(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{248:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return p})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return O}));var b=r(3),l=r(7),n=(r(0),r(747)),a={title:"Operator priority"},p={unversionedId:"Operator_priority",id:"version-v4/Operator_priority",isDocsHomePage:!1,title:"Operator priority",description:"When evaluating an expression, operators are evaluated in a specific order depending on operator priority. The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.* *",source:"@site/versioned_docs/version-v4/Operator_priority.md",slug:"/Operator_priority",permalink:"/platform/Operator_priority",editUrl:"https://github.com/danchanka/platform/edit/v4/docs/en/Operator_priority.md",version:"v4",lastUpdatedAt:1618567877,formattedLastUpdatedAt:"4/16/2021",sidebar:"version-v4/learn",previous:{title:"Expression",permalink:"/platform/Expression"},next:{title:"Property operators",permalink:"/platform/Property_operators"}},c=[],o={toc:c};function O(e){var t=e.components,r=Object(l.a)(e,["components"]);return Object(n.b)("wrapper",Object(b.a)({},o,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"When evaluating an ",Object(n.b)("a",{parentName:"p",href:"/platform/Expression"},"expression"),", ",Object(n.b)("a",{parentName:"p",href:"/platform/Operators"},"operators")," are evaluated in a specific order depending on ",Object(n.b)("em",{parentName:"p"},"operator priority.")," The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.* *"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:null},"Operator"),Object(n.b)("th",{parentName:"tr",align:null},"Description"),Object(n.b)("th",{parentName:"tr",align:null},"Type"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"(expression)"),Object(n.b)("br",null),Object(n.b)("p",null,"JOIN"),Object(n.b)("br",null),Object(n.b)("p",null,"CASE, MULTI, OVERRIDE, EXCLUSIVE, IF ... THEN"),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/PARTITION_operator"},"PARTITION")),Object(n.b)("br",null),Object(n.b)("p",null,"RECURSION"),Object(n.b)("br",null),Object(n.b)("p",null,"GROUP"),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/STRUCT_operator"},"STRUCT")),Object(n.b)("br",null),Object(n.b)("p",null,"MAX/MIN"),Object(n.b)("br",null),Object(n.b)("p",null,"CONCAT"),Object(n.b)("br",null),Object(n.b)("p",null,"INTEGER, DOUBLE..."),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/PREV_operator"},"PREV"),", ",Object(n.b)("a",{parentName:"td",href:"/platform/Change_operators"},"CHANGED, ...")),Object(n.b)("br",null),Object(n.b)("p",null,"CLASS"),Object(n.b)("br",null),Object(n.b)("p",null,"ACTIVE"),Object(n.b)("br",null),Object(n.b)("p",null,"literal")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Expression in parentheses"),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Composition_JOIN_"},"Composition")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE_"},"Selection")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Partitioning_sorting_PARTITION_..._ORDER_"},"Partition/order")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Recursion_RECURSION_"},"Recursion")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Grouping_GROUP_"},"Group")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Structure_operations_STRUCT_"},"Structure creation")),Object(n.b)("br",null),Object(n.b)("p",null,"Maximum/minimum"),Object(n.b)("br",null),Object(n.b)("p",null,"String concatenation"),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Type_conversion"},"Type conversion")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("br",null),Object(n.b)("br",null)),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Property_signature_CLASS_"},"Property signature")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Activity_ACTIVE_"},"Activity")),Object(n.b)("br",null),Object(n.b)("p",null," ",Object(n.b)("a",{parentName:"td",href:"/platform/Constant"},"Constants"))),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,Object(n.b)("br",null),Object(n.b)("br",null)),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"),Object(n.b)("br",null),Object(n.b)("p",null,"Prefix"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Operator_"},"[ ]")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/IS_AS_operators"},"IS")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/IS_AS_operators"},"AS"))),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Structure_operations_STRUCT_"},"Structure element access")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Classification_IS_AS_"},"Classification")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Classification_IS_AS_"},"Classification"))),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Postfix"),Object(n.b)("br",null),Object(n.b)("p",null,"Postfix"),Object(n.b)("br",null),Object(n.b)("p",null,"Postfix"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},"-")),Object(n.b)("td",{parentName:"tr",align:null},"Unary minus"),Object(n.b)("td",{parentName:"tr",align:null},"Prefix")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},"*")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},"/"))),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Multiplication"),Object(n.b)("br",null),Object(n.b)("p",null,"Division")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Binary"),Object(n.b)("br",null),Object(n.b)("p",null,"Binary"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},"+")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},"-"))),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Addition"),Object(n.b)("br",null),Object(n.b)("p",null,"Subtraction")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Binary"),Object(n.b)("br",null),Object(n.b)("p",null,"Binary"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},"(+)")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},"(-)"))),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Addition with NULL values"),Object(n.b)("br",null),Object(n.b)("p",null,"Subtraction with NULL values")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Binary"),Object(n.b)("br",null),Object(n.b)("p",null,"Binary"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},"<")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},"<=")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},">")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},">","="))),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Less"),Object(n.b)("br",null),Object(n.b)("p",null,"Less or equal"),Object(n.b)("br",null),Object(n.b)("p",null,"Greater"),Object(n.b)("br",null),Object(n.b)("p",null,"Greater or equal")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Binary"),Object(n.b)("br",null),Object(n.b)("p",null,"Binary"),Object(n.b)("br",null),Object(n.b)("p",null,"Binary"),Object(n.b)("br",null),Object(n.b)("p",null,"Binary"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},"==")),Object(n.b)("br",null),Object(n.b)("p",null,Object(n.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},"!="))),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Equal"),Object(n.b)("br",null),Object(n.b)("p",null,"Not equal")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("p",null,"Binary"),Object(n.b)("br",null),Object(n.b)("p",null,"Binary"))),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/AND_OR_NOT_XOR_operators"},"NOT")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/Logical_operators_AND_OR_NOT_XOR_"},"Logical negation")),Object(n.b)("td",{parentName:"tr",align:null},"Prefix")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/AND_OR_NOT_XOR_operators"},"AND")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/Logical_operators_AND_OR_NOT_XOR_"},"Logical AND")),Object(n.b)("td",{parentName:"tr",align:null},"Binary")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/AND_OR_NOT_XOR_operators"},"XOR")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/Logical_operators_AND_OR_NOT_XOR_"},"Logical exclusive OR")),Object(n.b)("td",{parentName:"tr",align:null},"Binary")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/AND_OR_NOT_XOR_operators"},"OR")),Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/Logical_operators_AND_OR_NOT_XOR_"},"Logical OR")),Object(n.b)("td",{parentName:"tr",align:null},"Binary")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"td",href:"/platform/IF_operator"},"IF")),Object(n.b)("td",{parentName:"tr",align:null},"Condition"),Object(n.b)("td",{parentName:"tr",align:null},"Binary")))),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"})))))}O.isMDXComponent=!0},747:function(e,t,r){"use strict";r.d(t,"a",(function(){return i})),r.d(t,"b",(function(){return m}));var b=r(0),l=r.n(b);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,b)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,b,l=function(e,t){if(null==e)return{};var r,b,l={},n=Object.keys(e);for(b=0;b<n.length;b++)r=n[b],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(b=0;b<n.length;b++)r=n[b],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var o=l.a.createContext({}),O=function(e){var t=l.a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},i=function(e){var t=O(e.components);return l.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},j=l.a.forwardRef((function(e,t){var r=e.components,b=e.mdxType,n=e.originalType,a=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),i=O(r),j=b,m=i["".concat(a,".").concat(j)]||i[j]||u[j]||n;return r?l.a.createElement(m,p(p({ref:t},o),{},{components:r})):l.a.createElement(m,p({ref:t},o))}));function m(e,t){var r=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var n=r.length,a=new Array(n);a[0]=j;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:b,a[1]=p;for(var o=2;o<n;o++)a[o]=r[o];return l.a.createElement.apply(null,a)}return l.a.createElement.apply(null,r)}j.displayName="MDXCreateElement"}}]);