(window.webpackJsonp=window.webpackJsonp||[]).push([[470],{540:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return b}));var o=t(3),r=t(7),a=(t(0),t(746)),i={title:"How-to: Data entry"},l={unversionedId:"How-to_Data_entry",id:"version-v4/How-to_Data_entry",isDocsHomePage:!1,title:"How-to: Data entry",description:"Example 1",source:"@site/versioned_docs/version-v4/How-to_Data_entry.md",slug:"/How-to_Data_entry",permalink:"/platform/How-to_Data_entry",editUrl:"https://github.com/danchanka/platform/edit/master/versioned_docs/version-v4/How-to_Data_entry.md",version:"v4",sidebar:"version-v4/learn",previous:{title:"How-to: Trees",permalink:"/platform/How-to_Trees"},next:{title:"How-to: Navigator",permalink:"/platform/How-to_Navigator"}},s=[{value:"Example 1",id:"example-1",children:[{value:"Condition",id:"condition",children:[]},{value:"Solution",id:"solution",children:[]}]},{value:"Example 2",id:"example-2",children:[{value:"Condition",id:"condition-1",children:[]},{value:"Solution",id:"solution-1",children:[]}]}],c={toc:s};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"example-1"},"Example 1"),Object(a.b)("h3",{id:"condition"},"Condition"),Object(a.b)("p",null,"We have a form that displays a list of books. We need to implement an option for entering a name only in upper case. Group change, copy&paste, and similar features must also be supported."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-lsf"},"CLASS Book 'Book';\nname 'Name' = DATA ISTRING[100] (Book);\n\nFORM books\n     OBJECTS b = Book\n;\n\nNAVIGATOR {\n    NEW books;\n}\n")),Object(a.b)("h3",{id:"solution"},"Solution"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-lsf"},'changeName(Book b)  {\n     INPUT s = ISTRING[100] // inputting ISTRING[100] "to parameter" s (automatically wrapped in REQUEST, that is, group adjustments, PASTE, etc. are available)\n                     DO // checking for requestCanceled\n                          name(b) <- s;\n}\n\nEXTEND FORM books\n    PROPERTIES (b) name ON CHANGE changeName(b)\n;\n')),Object(a.b)("h2",{id:"example-2"},"Example 2"),Object(a.b)("h3",{id:"condition-1"},"Condition"),Object(a.b)("p",null,"We have a form that displays a list of books. In this form, the user can specify a genre, so that only\xa0books of this genre will be displayed. We also have a form containing the list of orders where you can also apply a filter by genre. Each book has a restricted/allowed flag, and the order may contain only allowed books."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-lsf"},"CLASS Genre 'Genre';\nname 'Name' = DATA ISTRING[100] (Genre);\n\ngenre 'Genre' = DATA Genre (Book);\nisForbidden 'Prohibition' = DATA BOOLEAN (Book);\n\nCLASS Order 'Order';\nbook 'Book' = DATA Book (Order);\nnameBook 'Book name' (Order o) = name(book(o));\n\ndate 'Date' = DATA DATE (Order);\nnumber 'Number' = DATA STRING[100] (Order);\n\nCONSTRAINT isForbidden(book(Order o))\n    CHECKED BY book MESSAGE 'It is forbidden to choose this book';\n\nFORM booksByGenre\n     OBJECTS g = Genre PANEL\n     PROPERTIES (g) name\n     OBJECTS b = Book\n     PROPERTIES (b) name\n;\n\n\nFORM orders 'Orders'\n    OBJECTS g = Genre PANEL\n    PROPERTIES (g) name\n\n    OBJECTS o = Order\n    PROPERTIES(o) READONLY date, number\n    FILTERS g == genre(book(o))\n;\n\nNAVIGATOR {\n    NEW orders;\n}\n")),Object(a.b)("p",null,"We need to replace the book selection mechanism on the order form so that the genre selection form is called. Additional requirements:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"The genre specified in the order form must be set as default value for the filter by genre"),Object(a.b)("li",{parentName:"ul"},"The current book from the order must be set as default value (if it has been selected)"),Object(a.b)("li",{parentName:"ul"},'The book in the order must be resettable (i. e. it must be possible to set the "Undefined" value)'),Object(a.b)("li",{parentName:"ul"},"Only allowed books can be selected"),Object(a.b)("li",{parentName:"ul"},"Group change, copy&paste, and similar features must also be supported for the field.")),Object(a.b)("h3",{id:"solution-1"},"Solution"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-lsf"},'changeNameBook(Genre g, Order o)  {\n          DIALOG booksByGenre OBJECTS // (automatically wrapped in REQUEST, that is, group adjustments, PASTE, etc. are available)\n                g = g NULL, // NULL input allowed\n                b = book(o) NULL INPUT bk NULL CONSTRAINTFILTER\n                    // book(o) NULL - substituting book(o) to the input (if necessary, the input can be omitted, that is, the user can simply write b INPUT ..., which in turn is equivalent to b=NULL NULL INPUT ...)\n                    // INPUT b NULL - returning the value of this object "to parameter" bk (return NULL is allowed, that is, there will be a reset button). Since the TO option is not specified, the result will be written to the requestedObject\n                    // CONSTRAINTFILTER - taking into account the constraints for object b on the assumption that the result will be written to the property passed to the input (in this case book(o),\n                    // if necessary, another expression can be specified in the form CONSTRAINTFILTER = dataBook(o)\n    DO // checking for requestCanceled\n        book(o) <- bk;\n}\n\nEXTEND FORM orders\n    PROPERTIES (o) nameBook ON CHANGE changeNameBook(g, o)\n;\n')))}b.isMDXComponent=!0},746:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),b=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=b(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=b(t),d=o,m=u["".concat(i,".").concat(d)]||u[d]||p[d]||a;return t?r.a.createElement(m,l(l({ref:n},c),{},{components:t})):r.a.createElement(m,l({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);