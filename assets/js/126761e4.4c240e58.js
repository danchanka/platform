(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[85026],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return f}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},p=Object.keys(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),i=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},N={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),k=i(r),f=n,u=k["".concat(l,".").concat(f)]||k[f]||N[f]||p;return r?a.createElement(u,o(o({ref:t},s),{},{components:r})):a.createElement(u,o({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=r.length,o=new Array(p);o[0]=k;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m.mdxType="string"==typeof e?e:n,o[1]=m;for(var i=2;i<p;i++)o[i]=r[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},87782:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},metadata:function(){return m},toc:function(){return l},default:function(){return s}});var a=r(22122),n=r(19756),p=(r(67294),r(3905)),o={title:"Property operators",sidebar_label:"Overview"},m={unversionedId:"Property_operators",id:"Property_operators",isDocsHomePage:!1,title:"Property operators",description:"Property operator\xa0is a syntax construct that describes an operator creating a property.",source:"@site/docs/Property_operators.md",sourceDirName:".",slug:"/Property_operators",permalink:"/platform/next/Property_operators",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/Property_operators.md",version:"current",lastUpdatedAt:1617721389,formattedLastUpdatedAt:"4/6/2021",sidebar_label:"Overview",frontMatter:{title:"Property operators",sidebar_label:"Overview"},sidebar:"learn",previous:{title:"Operator priority",permalink:"/platform/next/Operator_priority"},next:{title:"Arithmetic operators",permalink:"/platform/next/Arithmetic_operators"}},l=[{value:"Context dependent operators",id:"context-dependent-operators",children:[]},{value:"Context independent operators",id:"contextindependent",children:[]}],i={toc:l};function s(e){var t=e.components,r=(0,n.Z)(e,["components"]);return(0,p.kt)("wrapper",(0,a.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,(0,p.kt)("em",{parentName:"p"},"Property operator"),"\xa0is a syntax construct that describes an ",(0,p.kt)("a",{parentName:"p",href:"/platform/next/Operators"},"operator")," creating a ",(0,p.kt)("a",{parentName:"p",href:"/platform/next/Properties"},"property"),".\xa0"),(0,p.kt)("p",null,"Property operators can be divided into ",(0,p.kt)("em",{parentName:"p"},"context dependent")," and ",(0,p.kt)("em",{parentName:"p"},"context independent"),"."),(0,p.kt)("h3",{id:"context-dependent-operators"},"Context dependent operators"),(0,p.kt)("p",null,"Context dependent property operators can be part of ",(0,p.kt)("a",{parentName:"p",href:"/platform/next/Expression"},"expressions")," and use common parameters\xa0(context). These operators are:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/Arithmetic_operators"},"Arithmetic operators"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/Operator_"},(0,p.kt)("strong",{parentName:"a"},"[","]")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/ACTIVE_TAB_operator"},(0,p.kt)("strong",{parentName:"a"},"ACTIVE TAB")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/AGGR_operator"},(0,p.kt)("strong",{parentName:"a"},"AGGR")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/CASE_operator"},(0,p.kt)("strong",{parentName:"a"},"CASE")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/CLASS_operator"},(0,p.kt)("strong",{parentName:"a"},"CLASS")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/CONCAT_operator"},(0,p.kt)("strong",{parentName:"a"},"CONCAT")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/EXCLUSIVE_operator"},(0,p.kt)("strong",{parentName:"a"},"EXCLUSIVE")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/IF_operator"},(0,p.kt)("strong",{parentName:"a"},"IF")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/IF_..._THEN_operator"},(0,p.kt)("strong",{parentName:"a"},"IF")," operator ... ",(0,p.kt)("strong",{parentName:"a"},"THEN")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/JOIN_operator"},(0,p.kt)("strong",{parentName:"a"},"JOIN")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/MAX_operator"},(0,p.kt)("strong",{parentName:"a"},"MAX")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/MIN_operator"},(0,p.kt)("strong",{parentName:"a"},"MIN")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/MULTI_operator"},(0,p.kt)("strong",{parentName:"a"},"MULTI")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/OVERRIDE_operator"},(0,p.kt)("strong",{parentName:"a"},"OVERRIDE")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/PARTITION_operator"},(0,p.kt)("strong",{parentName:"a"},"PARTITION")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/GROUP_operator"},(0,p.kt)("strong",{parentName:"a"},"GROUP"),"\xa0operator"),"\xa0(without BY block)")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/PREV_operator"},(0,p.kt)("strong",{parentName:"a"},"PREV")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/RECURSION_operator"},(0,p.kt)("strong",{parentName:"a"},"RECURSION")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/STRUCT_operator"},(0,p.kt)("strong",{parentName:"a"},"STRUCT")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/UNGROUP_operator"},(0,p.kt)("strong",{parentName:"a"},"UNGROUP")," operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/Type_conversion_operator"},"Type conversion operator"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/AND_OR_NOT_XOR_operators"},(0,p.kt)("strong",{parentName:"a"},"AND"),", ",(0,p.kt)("strong",{parentName:"a"},"OR"),", ",(0,p.kt)("strong",{parentName:"a"},"NOT"),", ",(0,p.kt)("strong",{parentName:"a"},"XOR")," operators"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/IS_AS_operators"},(0,p.kt)("strong",{parentName:"a"},"IS"),", ",(0,p.kt)("strong",{parentName:"a"},"AS")," operators"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/Change_operators"},"Change operators"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},(0,p.kt)("a",{parentName:"p",href:"/platform/next/Comparison_operators"},"Comparison operators")))),(0,p.kt)("h3",{id:"contextindependent"},"Context independent operators"),(0,p.kt)("p",null,"Context independent property operators differ from the context dependent ones in that they do not just use the upper parameters but define the parameters themselves. As a result, they cannot be part of expressions and can only be used in the ",(0,p.kt)("a",{parentName:"p",href:"/platform/next/Instruction_="},(0,p.kt)("strong",{parentName:"a"},"=")," instruction")," and the ",(0,p.kt)("a",{parentName:"p",href:"/platform/next/JOIN_operator"},(0,p.kt)("strong",{parentName:"a"},"JOIN")," operator"),":\xa0"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/platform/next/DATA_operator"},(0,p.kt)("strong",{parentName:"a"},"DATA")," operator")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/platform/next/GROUP_operator"},(0,p.kt)("strong",{parentName:"a"},"GROUP")," operator"),"\xa0(with BY block)"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/platform/next/FORMULA_operator"},(0,p.kt)("strong",{parentName:"a"},"FORMULA")," operator")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/platform/next/ABSTRACT_operator"},(0,p.kt)("strong",{parentName:"a"},"ABSTRACT")," operator")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/platform/next/Object_group_operator"},"Object group operators"))))}s.isMDXComponent=!0}}]);