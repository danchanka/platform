(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[83863],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},52866:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c},default:function(){return l}});var n=r(22122),a=r(19756),o=(r(67294),r(3905)),i={title:"Instruction @"},p={unversionedId:"Instruction_",id:"version-v4/Instruction_",isDocsHomePage:!1,title:"Instruction @",description:"The @ instruction uses metacode.",source:"@site/versioned_docs/version-v4/Instruction_.md",sourceDirName:".",slug:"/Instruction_",permalink:"/platform/Instruction_",editUrl:"https://github.com/danchanka/platform/edit/v4/docs/en/Instruction_.md",version:"v4",lastUpdatedAt:1619102841,formattedLastUpdatedAt:"4/22/2021",frontMatter:{title:"Instruction @"},sidebar:"version-v4/learn",previous:{title:"META instruction",permalink:"/platform/META_instruction"},next:{title:"TABLE instruction",permalink:"/platform/TABLE_instruction"}},c=[{value:"Syntax",id:"syntax",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]}],s={toc:c};function l(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@")," instruction uses ",(0,o.kt)("a",{parentName:"p",href:"/platform/Metaprogramming#metacode"},"metacode"),"."),(0,o.kt)("h3",{id:"syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"@name(param1, ..., paramN);\n")),(0,o.kt)("h3",{id:"description"},"Description"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@")," instruction generates code obtained from the metacode with the name ",(0,o.kt)("inlineCode",{parentName:"p"},"name"),", replacing metacode parameters with the values of its own parameters and executing the special ",(0,o.kt)("a",{parentName:"p",href:"/platform/Metaprogramming#concat"},(0,o.kt)("inlineCode",{parentName:"a"},"##")," and ",(0,o.kt)("inlineCode",{parentName:"a"},"###")," operations"),". "),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"name")),(0,o.kt)("p",{parentName:"li"},"  The name of the metacode used. ",(0,o.kt)("a",{parentName:"p",href:"/platform/IDs#cid-broken"},"Composite ID"),".  ")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"param1, ..., paramN")),(0,o.kt)("p",{parentName:"li"},"  The list of instruction parameters that will be substituted for the parameters of the metacode used. The parameters can be a ",(0,o.kt)("a",{parentName:"p",href:"/platform/IDs#cid-broken"},"composite ID"),", a ",(0,o.kt)("a",{parentName:"p",href:"/platform/IDs#classid-broken"},"class ID"),", a ",(0,o.kt)("a",{parentName:"p",href:"/platform/Literals"},"literal")," or the ",(0,o.kt)("em",{parentName:"p"},"empty parameter")," when nothing is passed as a parameter."))),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lsf"},"CLASS Book;\n@objectProperties(book, INTEGER, 'Book');\n\nCLASS Flower;\n@objectProperties(flower, BPSTRING[100], ); // if the parameter is not passed, then it will be empty\n\nCLASS Table;\n@objectProperties(table, NUMERIC[14,2]);\n")))}l.isMDXComponent=!0}}]);