(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{73:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return c}));var n=r(3),a=r(7),o=(r(0),r(747)),i={title:"How-to: FORMULA"},l={unversionedId:"How-to_FORMULA",id:"version-v4/How-to_FORMULA",isDocsHomePage:!1,title:"How-to: FORMULA",description:"Example 1",source:"@site/versioned_docs/version-v4/How-to_FORMULA.md",slug:"/How-to_FORMULA",permalink:"/platform/How-to_FORMULA",editUrl:"https://github.com/danchanka/platform/edit/v4/docs/en/How-to_FORMULA.md",version:"v4",lastUpdatedAt:1619622551,formattedLastUpdatedAt:"4/28/2021",sidebar:"version-v4/learn",previous:{title:"How-to: Access to internal systems",permalink:"/platform/How-to_Access_to_internal_systems"},next:{title:"How-to: INTERNAL",permalink:"/platform/How-to_INTERNAL"}},s=[{value:"Example 1",id:"example-1",children:[{value:"Task",id:"task",children:[]},{value:"Solution",id:"solution",children:[]}]},{value:"Example 2",id:"example-2",children:[{value:"Task",id:"task-1",children:[]},{value:"Solution",id:"solution-1",children:[]}]},{value:"Example 3",id:"example-3",children:[{value:"Task",id:"task-2",children:[]},{value:"Solution",id:"solution-2",children:[]}]}],p={toc:s};function c(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"example-1"},"Example 1"),Object(o.b)("h3",{id:"task"},"Task"),Object(o.b)("p",null,"We have a list of orders."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lsf"},"CLASS Order 'Order';\ndate 'Date' = DATA DATE (Order);\nnumber 'Number' = DATA STRING[30] (Order);\n\nFORM orders 'Purchase orders'\n    OBJECTS o = Order\n    PROPERTIES(o) date, number, NEW, DELETE\n;\n\nNAVIGATOR {\n    NEW orders;\n}\n")),Object(o.b)("p",null,"We need to export this list to CSV and keep the date in the ISO format (YYYY-MM-DD)."),Object(o.b)("h3",{id:"solution"},"Solution"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lsf"},"toISO = FORMULA STRING[10] 'to_char($1,\\'YYYY-MM-DD\\')';\n\nexportToCSV 'Export to CSV' () {\n    LOCAL file = FILE ();\n    EXPORT CSV FROM toISO(date(Order o)), number(o) TO file;\n    open(file());\n}\n\nEXTEND FORM orders\n    PROPERTIES() exportToCSV\n;\n")),Object(o.b)("p",null,"To solve this task we use the ",Object(o.b)("a",{parentName:"p",href:"/platform/FORMULA_operator"},"FORMULA")," operator to create a new property that takes a date and returns its value as a string in the YYYY-MM-DD format. The expression contains ",Object(o.b)("a",{parentName:"p",href:"https://www.postgresql.org/docs/11/functions-formatting.html"},"to","_","char")," which is a standard PostgreSQL function."),Object(o.b)("h2",{id:"example-2"},"Example 2"),Object(o.b)("h3",{id:"task-1"},"Task"),Object(o.b)("p",null,"Similar to ",Object(o.b)("a",{parentName:"p",href:"#example-1"},Object(o.b)("strong",{parentName:"a"},"Example 1")),". New lines containing quantity and amount have been added to the orders."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lsf"},"CLASS OrderDetail;\norder = DATA Order (OrderDetail) NONULL DELETE;\n\nquantity 'Qty' = DATA NUMERIC[14,3] (OrderDetail);\nsum 'Amount' = DATA NUMERIC[14,2] (OrderDetail);\n\nEXTEND FORM orders\n    OBJECTS d = OrderDetail\n    PROPERTIES(d) quantity, sum, NEW, DELETE\n    FILTERS order(d) = o\n;\n")),Object(o.b)("p",null,"We need to export all the lines from a given order as CSV file in which quantities and amounts are shortened to 3 and 2 characters respectively. In addition, the numbers must be split into triads."),Object(o.b)("h3",{id:"solution-1"},"Solution"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lsf"},"toString = FORMULA TEXT 'to_char($1,$2)';\n\nexportToCSV 'Export to CSV' (Order o) {\n    LOCAL file = FILE ();\n    EXPORT CSV FROM toISO(date(o)), number(o), toString(quantity(OrderDetail d), '999 999.999'), toString(sum(d), '999 999.99') WHERE order(d) = o TO file;\n    open(file());\n}\n\nEXTEND FORM orders\n    PROPERTIES(o) exportToCSV\n;\n")),Object(o.b)("p",null,"We create the toString property that takes two parameters (numeric value and format) and returns a value of the ",Object(o.b)("strong",{parentName:"p"},"TEXT")," type. When exporting, we pass the required format as the second parameter."),Object(o.b)("h2",{id:"example-3"},"Example 3"),Object(o.b)("h3",{id:"task-2"},"Task"),Object(o.b)("p",null,"Similar to ",Object(o.b)("a",{parentName:"p",href:"#example-2"},Object(o.b)("strong",{parentName:"a"},"Example 2")),"."),Object(o.b)("p",null,"We need to add a column that will be marked when the given order number contains only digits."),Object(o.b)("h3",{id:"solution-2"},"Solution"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lsf"},"onlyDigits = FORMULA NULL BOOLEAN 'CASE WHEN trim($1) ~ \\'^[0-9]*$\\' THEN 1 ELSE NULL END';\n\nEXTEND FORM orders\n    PROPERTIES 'Only numbers' = onlyDigits(number(o))\n;\n")),Object(o.b)("p",null,"Since single quotes are used in the formula, make sure to ",Object(o.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Escape_character"},"escape")," them with a backslash ",Object(o.b)("strong",{parentName:"p"},"\\","\\"),"."),Object(o.b)("p",null,"Note that the native ",Object(o.b)("strong",{parentName:"p"},"BOOLEAN")," type allows only 2 values: ",Object(o.b)("strong",{parentName:"p"},"TRUE")," and ",Object(o.b)("strong",{parentName:"p"},"NULL"),". Therefore, when composing a logical expression, make sure to convert its negative value to ",Object(o.b)("strong",{parentName:"p"},"NULL"),". In addition, the platform must explicitly know whether the expression can return an undefined value. This is why the keyword ",Object(o.b)("strong",{parentName:"p"},"FORMULA")," must be followed by the corresponding marker."),Object(o.b)("p",null,"At the database level, the ",Object(o.b)("strong",{parentName:"p"},"BOOLEAN")," type is stored as numeric value (1 or null), and therefore the properties of this type must also return a numeric value. The developer must check that the return type of the expression matches the specified type. Otherwise, the behavior will be unpredictable (but in most cases a request will simply return an error)."),Object(o.b)("p",null,"Keep in mind that if any property composed by the ",Object(o.b)("strong",{parentName:"p"},"FORMULA")," operator receives ",Object(o.b)("strong",{parentName:"p"},"NULL")," as argument, then the overall result will always be ",Object(o.b)("strong",{parentName:"p"},"NULL"),"."))}c.isMDXComponent=!0},747:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),c=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),b=n,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return r?a.a.createElement(m,l(l({ref:t},p),{},{components:r})):a.a.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);