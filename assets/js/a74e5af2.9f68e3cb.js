(window.webpackJsonp=window.webpackJsonp||[]).push([[449],{514:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return p})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(7),o=(a(0),a(745)),p={title:"ABSTRACT operator"},i={unversionedId:"ABSTRACT_operator",id:"ABSTRACT_operator",isDocsHomePage:!1,title:"ABSTRACT operator",description:"The ABSTRACT operator creates an abstract property.",source:"@site/docs/ABSTRACT_operator.md",slug:"/ABSTRACT_operator",permalink:"/platform/next/ABSTRACT_operator",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/ABSTRACT_operator.md",version:"current",lastUpdatedAt:1618486385,formattedLastUpdatedAt:"4/15/2021",sidebar:"learn",previous:{title:"Operator []",permalink:"/platform/next/Operator_"},next:{title:"ACTIVE TAB operator",permalink:"/platform/next/ACTIVE_TAB_operator"}},l=[{value:"Syntax",id:"syntax",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]}],c={toc:l};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"},"ABSTRACT")," operator creates an ",Object(o.b)("a",{parentName:"p",href:"/platform/next/Property_extension"},"abstract property"),". "),Object(o.b)("h3",{id:"syntax"},"Syntax"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"ABSTRACT [type [exclusionType]] [CHECKED] returnClassName(argClassName1, ..., argClassNameN)\n")),Object(o.b)("p",null,"Where ",Object(o.b)("em",{parentName:"p"},"exclusionType")," is of two types:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"EXCLUSIVE\nOVERRIDE [FIRST | LAST]\n")),Object(o.b)("h3",{id:"description"},"Description"),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"},"ABSTRACT")," operator creates an abstract property, the implementations of which can be defined later (for example, in other ",Object(o.b)("a",{parentName:"p",href:"/platform/next/Modules"},"modules")," dependent on the module containing the ",Object(o.b)("strong",{parentName:"p"},"ABSTRACT")," property). Implementations are added to the property using the ",Object(o.b)("a",{parentName:"p",href:"/platform/next/Instruction_+="},"instruction +="),". When calculating an abstract property, its ",Object(o.b)("em",{parentName:"p"},"matching")," implementation is selected and calculated. The selection of the matching implementation depends on the ",Object(o.b)("em",{parentName:"p"},"selection conditions")," that are defined when adding implementations, and on the ",Object(o.b)("strong",{parentName:"p"},"ABSTRACT")," operator type."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"CASE")," - a general case. The selection condition will be explicitly specified in the implementation using the ",Object(o.b)("a",{parentName:"li",href:"/platform/next/Instruction_+="},Object(o.b)("strong",{parentName:"a"},"WHEN")," block"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"MULTI")," \u2013 a ",Object(o.b)("a",{parentName:"li",href:"/platform/next/Property_extension#poly"},"polymorphic form"),". The selection condition is that the parameters match the implementation ",Object(o.b)("a",{parentName:"li",href:"/platform/next/CLASS_operator"},"signature"),". This type is the default type and need not to be explicitly specified."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"VALUE")," - a polymorphic form. The selection condition will be definiteness (a none-",Object(o.b)("strong",{parentName:"li"},"NULL")," value) of the implementation value (essentially, the implementation itself).")),Object(o.b)("p",null,"The ",Object(o.b)("a",{parentName:"p",href:"/platform/next/Property_extension#exclusive"},"type of mutual exclusion")," of an operator determines whether several conditions for the implementation of an abstract property can simultaneously be met with a certain set of parameters. The ",Object(o.b)("strong",{parentName:"p"},"EXCLUSIVE")," type indicates that implementation conditions cannot be met simultaneously. The ",Object(o.b)("strong",{parentName:"p"},"OVERRIDE")," type allows several simultaneously met conditions. In this case, the implementation to be selected is determined by the keywords ",Object(o.b)("strong",{parentName:"p"},"FIRST")," and ",Object(o.b)("strong",{parentName:"p"},"LAST"),"."),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"},"ABSTRACT")," operator cannot be used inside ",Object(o.b)("a",{parentName:"p",href:"/platform/next/Expression"},"expressions"),"."),Object(o.b)("h3",{id:"parameters"},"Parameters"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("em",{parentName:"p"},"type")),Object(o.b)("p",{parentName:"li"},"  Type of abstract property. It is specified by one of the keywords:"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"CASE"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"MULTI"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"VALUE")),Object(o.b)("p",{parentName:"li"},"The default value is ",Object(o.b)("strong",{parentName:"p"},"MULTI"),".")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("em",{parentName:"p"},"exclusionType")),Object(o.b)("p",{parentName:"li"},"  Type of mutual exclusion. One of these keywords: ",Object(o.b)("strong",{parentName:"p"},"EXCLUSIVE")," or ",Object(o.b)("strong",{parentName:"p"},"OVERRIDE"),". Unless explicitly specified, in a ",Object(o.b)("strong",{parentName:"p"},"MULTI")," abstract property the default type of mutual exclusion is ",Object(o.b)("strong",{parentName:"p"},"EXCLUSIVE"),", and in all other cases the default mutual exclusion type is ",Object(o.b)("strong",{parentName:"p"},"OVERRIDE"),"."),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"FIRST"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"LAST")),Object(o.b)("p",{parentName:"li"},"Keywords. Determine which of the matching implementations will be selected. When the word ",Object(o.b)("strong",{parentName:"p"},"FIRST")," is specified, implementations will be added to the top of the implementations list, so that the last added implementation will be selected. When the word ",Object(o.b)("strong",{parentName:"p"},"LAST")," is specified, implementations will be added to the end of the implementations list, so that the implementation added first will be selected. If not specified, the default is ",Object(o.b)("strong",{parentName:"p"},"FIRST"),". ")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("em",{parentName:"p"},"FULL")),Object(o.b)("p",{parentName:"li"},"  Keyword. If specified, the platform will automatically check that at least one implementation is specified for all child objects of the argument classes (or exactly one if the conditions are mutually exclusive).")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("em",{parentName:"p"},"returnClassName")),Object(o.b)("p",{parentName:"li"},"  Class of the return value of the property. ",Object(o.b)("a",{parentName:"p",href:"/platform/next/IDs#classid-broken"},"Class ID"),".")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("em",{parentName:"p"},"argClassName1, ..., argClassNameN")),Object(o.b)("p",{parentName:"li"},"  List of class names of property arguments. Each name is defined by a class ID."))),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-lsf"},"CLASS Invoice;\nCLASS InvoiceDetail;\nCLASS Range;\n\nrateChargeExchange(invoice) = ABSTRACT NUMERIC[14,6] (Invoice);             // In this case, ABSTRACT MULTI EXCLUSIVE is created\nbackgroundSku 'Color' (d) = ABSTRACT CASE FULL COLOR (InvoiceDetail); // In this case, ABSTRACT CASE OVERRIDE LAST is created, and if there are\n                                                                            // several suitable implementations, the first of them will be calculated\noverVAT = ABSTRACT VALUE OVERRIDE FIRST Range (InvoiceDetail);          // The last matching implementation will be calculated here\n")))}s.isMDXComponent=!0},745:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},b=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=s(a),u=n,d=b["".concat(p,".").concat(u)]||b[u]||m[u]||o;return a?r.a.createElement(d,i(i({ref:t},c),{},{components:a})):r.a.createElement(d,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,p=new Array(o);p[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var c=2;c<o;c++)p[c]=a[c];return r.a.createElement.apply(null,p)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);