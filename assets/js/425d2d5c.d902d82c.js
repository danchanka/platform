(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{245:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return o})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return c}));var a=r(3),n=r(7),b=(r(0),r(745)),l={title:"Operator priority"},o={unversionedId:"Operator_priority",id:"version-v4/Operator_priority",isDocsHomePage:!1,title:"Operator priority",description:"When evaluating an expression, operators are evaluated in a specific order depending on operator priority. The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.",source:"@site/versioned_docs/version-v4/Operator_priority.md",slug:"/Operator_priority",permalink:"/platform/Operator_priority",editUrl:"https://github.com/danchanka/platform/edit/v4/docs/en/Operator_priority.md",version:"v4",lastUpdatedAt:1619189037,formattedLastUpdatedAt:"4/23/2021",sidebar:"version-v4/learn",previous:{title:"Expression",permalink:"/platform/Expression"},next:{title:"Property operators",permalink:"/platform/Property_operators"}},i=[],p={toc:i};function c(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"When evaluating an ",Object(b.b)("a",{parentName:"p",href:"/platform/Expression"},"expression"),", ",Object(b.b)("a",{parentName:"p",href:"/platform/Operators"},"operators")," are evaluated in a specific order depending on ",Object(b.b)("em",{parentName:"p"},"operator priority"),". The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Operator"),Object(b.b)("th",{parentName:"tr",align:null},"Description"),Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"(expression)"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"JOIN"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"CASE"),", ",Object(b.b)("inlineCode",{parentName:"td"},"MULTI"),", ",Object(b.b)("inlineCode",{parentName:"td"},"OVERRIDE"),", ",Object(b.b)("inlineCode",{parentName:"td"},"EXCLUSIVE"),", ",Object(b.b)("inlineCode",{parentName:"td"},"IF ... THEN"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/PARTITION_operator"},Object(b.b)("inlineCode",{parentName:"a"},"PARTITION")),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"RECURSION"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"GROUP"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/STRUCT_operator"},Object(b.b)("inlineCode",{parentName:"a"},"STRUCT")),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"MAX"),"/",Object(b.b)("inlineCode",{parentName:"td"},"MIN"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"CONCAT"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"INTEGER"),", ",Object(b.b)("inlineCode",{parentName:"td"},"DOUBLE"),"...",Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/PREV_operator"},Object(b.b)("inlineCode",{parentName:"a"},"PREV")),", ",Object(b.b)("a",{parentName:"td",href:"/platform/Change_operators"},Object(b.b)("inlineCode",{parentName:"a"},"CHANGED"),", ..."),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"CLASS"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"ACTIVE"),Object(b.b)("br",null),Object(b.b)("inlineCode",{parentName:"td"},"literal")),Object(b.b)("td",{parentName:"tr",align:null},"Expression in parentheses",Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Composition_JOIN_"},"Composition"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE_"},"Selection"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Partitioning_sorting_PARTITION_..._ORDER_"},"Partition/order"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Recursion_RECURSION_"},"Recursion"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Grouping_GROUP_"},"Group"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Structure_operations_STRUCT_"},"Structure creation"),Object(b.b)("br",null),"Maximum/minimum",Object(b.b)("br",null),"String concatenation",Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Type_conversion"},"Type conversion"),Object(b.b)("br",null),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Property_signature_CLASS_"},"Property signature"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Activity_ACTIVE_"},"Activity"),Object(b.b)("br",null)," ",Object(b.b)("a",{parentName:"td",href:"/platform/Constant"},"Constants")),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),"Prefix",Object(b.b)("br",null),Object(b.b)("br",null))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Operator_"},Object(b.b)("inlineCode",{parentName:"a"},"[ ]")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/IS_AS_operators"},Object(b.b)("inlineCode",{parentName:"a"},"IS")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/IS_AS_operators"},Object(b.b)("inlineCode",{parentName:"a"},"AS"))),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Structure_operations_STRUCT_"},"Structure element access"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Classification_IS_AS_"},"Classification"),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Classification_IS_AS_"},"Classification")),Object(b.b)("td",{parentName:"tr",align:null},"Postfix",Object(b.b)("br",null),"Postfix",Object(b.b)("br",null),"Postfix")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},Object(b.b)("inlineCode",{parentName:"a"},"-"))),Object(b.b)("td",{parentName:"tr",align:null},"Unary minus"),Object(b.b)("td",{parentName:"tr",align:null},"Prefix")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},Object(b.b)("inlineCode",{parentName:"a"},"*")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},Object(b.b)("inlineCode",{parentName:"a"},"/"))),Object(b.b)("td",{parentName:"tr",align:null},"Multiplication",Object(b.b)("br",null),"Division"),Object(b.b)("td",{parentName:"tr",align:null},"Binary",Object(b.b)("br",null),"Binary")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},Object(b.b)("inlineCode",{parentName:"a"},"+")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},Object(b.b)("inlineCode",{parentName:"a"},"-"))),Object(b.b)("td",{parentName:"tr",align:null},"Addition",Object(b.b)("br",null),"Subtraction"),Object(b.b)("td",{parentName:"tr",align:null},"Binary",Object(b.b)("br",null),"Binary")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},Object(b.b)("inlineCode",{parentName:"a"},"(+)")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Arithmetic_operators"},Object(b.b)("inlineCode",{parentName:"a"},"(-)"))),Object(b.b)("td",{parentName:"tr",align:null},"Addition with ",Object(b.b)("inlineCode",{parentName:"td"},"NULL")," values",Object(b.b)("br",null),"Subtraction with ",Object(b.b)("inlineCode",{parentName:"td"},"NULL")," values"),Object(b.b)("td",{parentName:"tr",align:null},"Binary",Object(b.b)("br",null),"Binary")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},Object(b.b)("inlineCode",{parentName:"a"},"<")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},Object(b.b)("inlineCode",{parentName:"a"},"<=")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},Object(b.b)("inlineCode",{parentName:"a"},">")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},Object(b.b)("inlineCode",{parentName:"a"},">="))),Object(b.b)("td",{parentName:"tr",align:null},"Less",Object(b.b)("br",null),"Less or equal",Object(b.b)("br",null),"Greater",Object(b.b)("br",null),"Greater or equal"),Object(b.b)("td",{parentName:"tr",align:null},"Binary",Object(b.b)("br",null),"Binary",Object(b.b)("br",null),"Binary",Object(b.b)("br",null),"Binary")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},Object(b.b)("inlineCode",{parentName:"a"},"==")),Object(b.b)("br",null),Object(b.b)("a",{parentName:"td",href:"/platform/Comparison_operators"},Object(b.b)("inlineCode",{parentName:"a"},"!="))),Object(b.b)("td",{parentName:"tr",align:null},"Equal",Object(b.b)("br",null),"Not equal"),Object(b.b)("td",{parentName:"tr",align:null},"Binary",Object(b.b)("br",null),"Binary")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/AND_OR_NOT_XOR_operators"},Object(b.b)("inlineCode",{parentName:"a"},"NOT"))),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Logical_operators_AND_OR_NOT_XOR_"},"Logical negation")),Object(b.b)("td",{parentName:"tr",align:null},"Prefix")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/AND_OR_NOT_XOR_operators"},Object(b.b)("inlineCode",{parentName:"a"},"AND"))),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Logical_operators_AND_OR_NOT_XOR_"},"Logical AND")),Object(b.b)("td",{parentName:"tr",align:null},"Binary")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/AND_OR_NOT_XOR_operators"},Object(b.b)("inlineCode",{parentName:"a"},"XOR"))),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Logical_operators_AND_OR_NOT_XOR_"},"Logical exclusive OR")),Object(b.b)("td",{parentName:"tr",align:null},"Binary")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/AND_OR_NOT_XOR_operators"},Object(b.b)("inlineCode",{parentName:"a"},"OR"))),Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/Logical_operators_AND_OR_NOT_XOR_"},"Logical OR")),Object(b.b)("td",{parentName:"tr",align:null},"Binary")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("a",{parentName:"td",href:"/platform/IF_operator"},Object(b.b)("inlineCode",{parentName:"a"},"IF"))),Object(b.b)("td",{parentName:"tr",align:null},"Condition"),Object(b.b)("td",{parentName:"tr",align:null},"Binary")))))}c.isMDXComponent=!0},745:function(e,t,r){"use strict";r.d(t,"a",(function(){return O})),r.d(t,"b",(function(){return d}));var a=r(0),n=r.n(a);function b(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){b(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},b=Object.keys(e);for(a=0;a<b.length;a++)r=b[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)r=b[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=n.a.createContext({}),c=function(e){var t=n.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},O=function(e){var t=c(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},j=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,b=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),O=c(r),j=a,d=O["".concat(l,".").concat(j)]||O[j]||m[j]||b;return r?n.a.createElement(d,o(o({ref:t},p),{},{components:r})):n.a.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=r.length,l=new Array(b);l[0]=j;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<b;p++)l[p]=r[p];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,r)}j.displayName="MDXCreateElement"}}]);