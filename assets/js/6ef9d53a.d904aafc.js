(window.webpackJsonp=window.webpackJsonp||[]).push([[304],{373:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return a})),r.d(e,"metadata",(function(){return p})),r.d(e,"toc",(function(){return c})),r.d(e,"default",(function(){return O}));var b=r(3),n=r(7),l=(r(0),r(747)),a={title:"Operator priority"},p={unversionedId:"Operator_priority",id:"Operator_priority",isDocsHomePage:!1,title:"Operator priority",description:"When evaluating an expression, operators\xa0are evaluated in a specific order depending on operator priority. The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.*\xa0*",source:"@site/docs/Operator_priority.md",slug:"/Operator_priority",permalink:"/platform/next/Operator_priority",editUrl:"https://github.com/danchanka/platform/edit/master/docs/en/Operator_priority.md",version:"current",lastUpdatedAt:1617631212,formattedLastUpdatedAt:"4/5/2021",sidebar:"learn",previous:{title:"Expression",permalink:"/platform/next/Expression"},next:{title:"Property operators",permalink:"/platform/next/Property_operators"}},c=[],o={toc:c};function O(t){var e=t.components,r=Object(n.a)(t,["components"]);return Object(l.b)("wrapper",Object(b.a)({},o,r,{components:e,mdxType:"MDXLayout"}),Object(l.b)("p",null,"When evaluating an ",Object(l.b)("a",{parentName:"p",href:"/platform/next/Expression"},"expression"),", ",Object(l.b)("a",{parentName:"p",href:"/platform/next/Operators"},"operators"),"\xa0are evaluated in a specific order depending on ",Object(l.b)("em",{parentName:"p"},"operator priority.")," The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.*\xa0*"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Operator"),Object(l.b)("th",{parentName:"tr",align:null},"Description"),Object(l.b)("th",{parentName:"tr",align:null},"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"(expression)"),Object(l.b)("br",null),Object(l.b)("p",null,"JOIN"),Object(l.b)("br",null),Object(l.b)("p",null,"CASE, MULTI, OVERRIDE, EXCLUSIVE, IF ... THEN"),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/PARTITION_operator"},"PARTITION")),Object(l.b)("br",null),Object(l.b)("p",null,"RECURSION"),Object(l.b)("br",null),Object(l.b)("p",null,"GROUP"),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/STRUCT_operator"},"STRUCT")),Object(l.b)("br",null),Object(l.b)("p",null,"MAX/MIN"),Object(l.b)("br",null),Object(l.b)("p",null,"CONCAT"),Object(l.b)("br",null),Object(l.b)("p",null,"INTEGER, DOUBLE..."),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/PREV_operator"},"PREV"),", ",Object(l.b)("a",{parentName:"td",href:"/platform/next/Change_operators"},"CHANGED, ...")),Object(l.b)("br",null),Object(l.b)("p",null,"CLASS"),Object(l.b)("br",null),Object(l.b)("p",null,"ACTIVE"),Object(l.b)("br",null),Object(l.b)("p",null,"literal")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Expression in parentheses"),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Composition_JOIN_"},"Composition")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE_"},"Selection")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Partitioning_sorting_PARTITION_..._ORDER_"},"Partition/order")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Recursion_RECURSION_"},"Recursion")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Grouping_GROUP_"},"Group")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Structure_operations_STRUCT_"},"Structure creation")),Object(l.b)("br",null),Object(l.b)("p",null,"Maximum/minimum"),Object(l.b)("br",null),Object(l.b)("p",null,"String concatenation"),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Type_conversion"},"Type conversion")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("br",null),Object(l.b)("br",null)),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Property_signature_CLASS_"},"Property signature")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Activity_ACTIVE_"},"Activity")),Object(l.b)("br",null),Object(l.b)("p",null,"\xa0",Object(l.b)("a",{parentName:"td",href:"/platform/next/Constant"},"Constants"))),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,Object(l.b)("br",null),Object(l.b)("br",null)),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"),Object(l.b)("br",null),Object(l.b)("p",null,"Prefix"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Operator_"},"[ ]")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/IS_AS_operators"},"IS")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/IS_AS_operators"},"AS"))),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Structure_operations_STRUCT_"},"Structure element access")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Classification_IS_AS_"},"Classification")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Classification_IS_AS_"},"Classification"))),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Postfix"),Object(l.b)("br",null),Object(l.b)("p",null,"Postfix"),Object(l.b)("br",null),Object(l.b)("p",null,"Postfix"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/Arithmetic_operators"},"-")),Object(l.b)("td",{parentName:"tr",align:null},"Unary minus"),Object(l.b)("td",{parentName:"tr",align:null},"Prefix")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Arithmetic_operators"},"*")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Arithmetic_operators"},"/"))),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Multiplication"),Object(l.b)("br",null),Object(l.b)("p",null,"Division")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Binary"),Object(l.b)("br",null),Object(l.b)("p",null,"Binary"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Arithmetic_operators"},"+")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Arithmetic_operators"},"-"))),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Addition"),Object(l.b)("br",null),Object(l.b)("p",null,"Subtraction")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Binary"),Object(l.b)("br",null),Object(l.b)("p",null,"Binary"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Arithmetic_operators"},"(+)")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Arithmetic_operators"},"(-)"))),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Addition with NULL values"),Object(l.b)("br",null),Object(l.b)("p",null,"Subtraction with NULL values")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Binary"),Object(l.b)("br",null),Object(l.b)("p",null,"Binary"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Comparison_operators"},"<")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Comparison_operators"},"<=")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Comparison_operators"},">")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Comparison_operators"},">","="))),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Less"),Object(l.b)("br",null),Object(l.b)("p",null,"Less or equal"),Object(l.b)("br",null),Object(l.b)("p",null,"Greater"),Object(l.b)("br",null),Object(l.b)("p",null,"Greater or equal")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Binary"),Object(l.b)("br",null),Object(l.b)("p",null,"Binary"),Object(l.b)("br",null),Object(l.b)("p",null,"Binary"),Object(l.b)("br",null),Object(l.b)("p",null,"Binary"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Comparison_operators"},"==")),Object(l.b)("br",null),Object(l.b)("p",null,Object(l.b)("a",{parentName:"td",href:"/platform/next/Comparison_operators"},"!="))),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Equal"),Object(l.b)("br",null),Object(l.b)("p",null,"Not equal")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Binary"),Object(l.b)("br",null),Object(l.b)("p",null,"Binary"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/AND_OR_NOT_XOR_operators"},"NOT")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical negation")),Object(l.b)("td",{parentName:"tr",align:null},"Prefix")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/AND_OR_NOT_XOR_operators"},"AND")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical AND")),Object(l.b)("td",{parentName:"tr",align:null},"Binary")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/AND_OR_NOT_XOR_operators"},"XOR")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical exclusive OR")),Object(l.b)("td",{parentName:"tr",align:null},"Binary")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/AND_OR_NOT_XOR_operators"},"OR")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical OR")),Object(l.b)("td",{parentName:"tr",align:null},"Binary")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("a",{parentName:"td",href:"/platform/next/IF_operator"},"IF")),Object(l.b)("td",{parentName:"tr",align:null},"Condition"),Object(l.b)("td",{parentName:"tr",align:null},"Binary")))),Object(l.b)("p",null,"*\xa0*\xa0"))}O.isMDXComponent=!0},747:function(t,e,r){"use strict";r.d(e,"a",(function(){return i})),r.d(e,"b",(function(){return m}));var b=r(0),n=r.n(b);function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(t);e&&(b=b.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,b)}return r}function p(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){l(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,b,n=function(t,e){if(null==t)return{};var r,b,n={},l=Object.keys(t);for(b=0;b<l.length;b++)r=l[b],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(b=0;b<l.length;b++)r=l[b],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var o=n.a.createContext({}),O=function(t){var e=n.a.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):p(p({},e),t)),r},i=function(t){var e=O(t.components);return n.a.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.a.createElement(n.a.Fragment,{},e)}},j=n.a.forwardRef((function(t,e){var r=t.components,b=t.mdxType,l=t.originalType,a=t.parentName,o=c(t,["components","mdxType","originalType","parentName"]),i=O(r),j=b,m=i["".concat(a,".").concat(j)]||i[j]||u[j]||l;return r?n.a.createElement(m,p(p({ref:e},o),{},{components:r})):n.a.createElement(m,p({ref:e},o))}));function m(t,e){var r=arguments,b=e&&e.mdxType;if("string"==typeof t||b){var l=r.length,a=new Array(l);a[0]=j;var p={};for(var c in e)hasOwnProperty.call(e,c)&&(p[c]=e[c]);p.originalType=t,p.mdxType="string"==typeof t?t:b,a[1]=p;for(var o=2;o<l;o++)a[o]=r[o];return n.a.createElement.apply(null,a)}return n.a.createElement.apply(null,r)}j.displayName="MDXCreateElement"}}]);